
## Cask DSL 风格与约定

以下规则适用于所有 `Casks/*.rb`：

### 基本结构顺序

1. `cask "token" do`
2. `arch`（如需多架构）
3. `version`（必要时使用 `version.csv`）
4. `sha256`（单一或分架构 `arm:`/`intel:`）
5. `url`（包含 `verified:`、`user_agent:`、或 `referer:` 仅在确有需要时使用）
6. `name`（可多次：英文 + 中文）
7. `desc`
8. `homepage`
9. `livecheck do`（可选但推荐）
10. 其他属性：`auto_updates`、`depends_on`、`conflicts_with` 等
11. 安装主体：`app`/`pkg`/`binary`/`suite` 等
12. `postflight`/`preflight`（仅在确需时）
13. `uninstall`（如为 `pkg` 安装者）
14. `zap`（清理残留）
15. `end`

### 具体实践

#### 多架构处理
- **优先使用 `arch` 片段**：
  ```ruby
  arch arm: "-arm64"
  sha256 arm: "abc123...", intel: "def456..."
  url "https://example.com/App-#{version}#{arch}.dmg"
  ```
- **避免在 `url` 中使用条件判断**：不推荐 `if Hardware::CPU.arm?` 这类条件；优先使用 `arch` 片段。

#### 复合版本处理
- 使用 `version "25.7.1,1178"` 并以 `version.csv.first/second` 引用：
  ```ruby
  url "https://example.com/app.dmg?v=#{version.csv.second}"
  ```

#### livecheck 策略
- **推荐提供**，优先使用上游发布页、Sparkle feed 或稳定页面：
  ```ruby
  livecheck do
    url "https://example.com/appcast.xml"
    strategy :sparkle, &:short_version
  end
  ```
- 对仅在下载页可解析的，使用 `regex` 抽取版本。

#### postflight 注意事项
- 仅在必要时进行偏好设置写入等动作，避免过度操作
- 确保命令幂等、失败可忽略且不破坏安装
- 避免网络请求或大量文件写入

#### zap 清理
- 清理 `~/Library` 下的缓存、偏好、Saved State、WebKit、Logs 等典型路径
- 确保 token、域名与上游 Bundle Identifier 一致且准确

#### depends_on 规范
- 明确最低 macOS 版本，如 `">= :monterey"`
- 避免过宽或过严的版本要求

### 风格细则

- **Ruby 语法检查**：`ruby -c Casks/{app}.rb`
- **Homebrew 校验**：`brew audit --cask` 与（如需）`brew style`
- **字符串规范**：统一使用双引号；插值使用 `#{}`
- **正则表达式**：考虑大小写与平台差异
- **避免过度操作**：在 `postflight` 中避免网络请求或写大量文件

### 参考示例

查看现有 cask 文件作为参考：
- [Casks/aliyundrive.rb](mdc:Casks/aliyundrive.rb)
- [Casks/futu-niuniu.rb](mdc:Casks/futu-niuniu.rb)
- [Casks/eudic.rb](mdc:Casks/eudic.rb)

