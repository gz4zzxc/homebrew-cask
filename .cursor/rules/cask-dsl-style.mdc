---
globs: Casks/*.rb
description: Homebrew Cask Ruby DSL 约定与最佳实践
---

## Cask DSL 风格与约定

以下规则适用于所有 `Casks/*.rb`：

### 基本结构顺序

1. `cask "token" do`
2. `arch`（如需多架构）
3. `version`（必要时使用 `version.csv`）
4. `sha256`（单一或分架构 `arm:`/`intel:`）
5. `url`（包含 `verified:`、`user_agent:`、或 `referer:` 仅在确有需要时使用）
6. `name`（可多次：英文 + 中文）
7. `desc`
8. `homepage`
9. `livecheck do`（可选但推荐）
10. 其他属性：`auto_updates`、`depends_on`、`conflicts_with` 等
11. 安装主体：`app`/`pkg`/`binary`/`suite` 等
12. `postflight`/`preflight`（仅在确需时）
13. `uninstall`（如为 `pkg` 安装者）
14. `zap`（清理残留）
15. `end`

### 具体实践

- **多架构**：
  - 优先：
    ```ruby
    arch arm: "-arm64"
    sha256 arm: "...", intel: "..."
    url "...aDrive-#{version}#{arch}.dmg"
    ```
  - 仅当上游提供不同文件名时在 `url` 中使用 `if Hardware::CPU.arm?` 这类条件并不推荐；优先使用 `arch` 片段。

- **复合版本**：
  - 使用 `version "25.7.1,1178"` 并以 `version.csv.first/second` 引用：
    ```ruby
    url ".../app.dmg?v=#{version.csv.second}"
    ```

- **livecheck**：
  - 推荐提供，优先使用上游发布页、Sparkle feed 或稳定页面：
    ```ruby
    livecheck do
      url "https://example.com/appcast.xml"
      strategy :sparkle, &:short_version
    end
    ```
  - 对仅在下载页可解析的，使用 `regex` 抽取版本。

- **postflight**：
  - 仅在必要时进行偏好设置写入等动作，避免过度操作。确保命令幂等、失败可忽略且不破坏安装。

- **zap**：
  - 清理 `~/Library` 下的缓存、偏好、Saved State、WebKit、Logs 等典型路径。
  - 确保 token、域名与上游 Bundle Identifier 一致且准确。

- **depends_on**：
  - 明确最低 macOS 版本，如 `">= :monterey"`，避免过宽或过严。

### 风格细则

- Ruby 语法需通过：`ruby -c Casks/{app}.rb`
- Homebrew 校验需通过：`brew audit --cask` 与（如需）`brew style`
- 字符串统一使用双引号；插值使用 `#{}`；正则请考虑大小写与平台差异。
- 避免在 `postflight` 中进行网络请求或写大量文件；若需创建目录、标记文件，应使用系统命令且参数明确。

