name: Update Catalyst Browse Cask

on:
  schedule:
    - cron: "48 23 * * *"  # 北京时间 07:48
  workflow_dispatch: {}

permissions:
  contents: write

concurrency:
  group: update-catalyst-browse
  cancel-in-progress: true

jobs:
  update:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check new version
        id: check
        shell: bash
        run: |
          set -euo pipefail
          PAGE_URL="https://www.sony.com/electronics/support/articles/CCCT03000"
          CURRENT_VERSION=$(sed -n 's/^\s*version \"\(.*\)\"/\1/p' Casks/catalyst-browse.rb)

          page=$(curl -fsSL "$PAGE_URL")
          NEW_VERSION=$(printf "%s" "$page" | grep -Eo 'Catalyst[[:space:]]+Browse[[:space:]]+[0-9]+(\.[0-9]+)*' | head -n1 | awk '{print $3}')

          if [[ -z "${NEW_VERSION:-}" ]]; then
            echo "未能解析 Catalyst Browse 版本，跳过。"
            echo "update_needed=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          if [[ "$NEW_VERSION" == "$CURRENT_VERSION" ]]; then
            echo "已是最新版本：$CURRENT_VERSION"
            echo "update_needed=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          URL="https://di.update.sony.net/NEX/b579a2667c/Catalyst_Browse.dmg"
          curl -fSL "$URL" -o /tmp/catalyst-browse.dmg
          SHA=$(shasum -a 256 /tmp/catalyst-browse.dmg | awk '{print $1}')

          echo "new_version=$NEW_VERSION" >> "$GITHUB_OUTPUT"
          echo "new_sha256=$SHA" >> "$GITHUB_OUTPUT"
          echo "update_needed=true" >> "$GITHUB_OUTPUT"

      - name: Apply updates
        if: steps.check.outputs.update_needed == 'true'
        env:
          NEW_VERSION: ${{ steps.check.outputs.new_version }}
          NEW_SHA256: ${{ steps.check.outputs.new_sha256 }}
        shell: bash
        run: |
          set -euo pipefail
          OLD_VERSION=$(sed -n 's/^\s*version \"\(.*\)\"/\1/p' Casks/catalyst-browse.rb)

          sed -i '' "s/^\s*version \".*\"/  version \"$NEW_VERSION\"/" Casks/catalyst-browse.rb
          sed -i '' "s/^\s*sha256 \".*\"/  sha256 \"$NEW_SHA256\"/" Casks/catalyst-browse.rb

          sed -i '' "s/| \`catalyst-browse\` | [^|]* |/| \`catalyst-browse\` | $NEW_VERSION |/" README.md

          echo "OLD_VERSION=$OLD_VERSION" >> $GITHUB_ENV

      - name: Validate
        if: steps.check.outputs.update_needed == 'true'
        shell: bash
        run: |
          ruby -c Casks/catalyst-browse.rb
          grep "\`catalyst-browse\`" README.md | cat

      - name: Commit and push
        if: steps.check.outputs.update_needed == 'true'
        env:
          NEW_VERSION: ${{ steps.check.outputs.new_version }}
        shell: bash
        run: |
          set -euo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add Casks/catalyst-browse.rb README.md
          git commit -m "chore: update Catalyst Browse to version ${NEW_VERSION}

- Updated version from ${OLD_VERSION} to ${NEW_VERSION}
- Updated SHA256 checksum
- Updated README.md version table
- Source: https://www.sony.com/electronics/support/articles/CCCT03000" || exit 0
          git push

name: Update Sony Catalyst Browse Cask

on:
  schedule:
    # 每天北京时间上午 9 点检查更新（UTC 时间 1 点）
    - cron: '0 1 * * *'
  workflow_dispatch: # 允许手动触发
  push:
    branches:
      - main
    paths:
      - '.github/workflows/update-catalyst-browse.yml'

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check for new version
        id: check
        run: |
          # 获取当前 cask 中的版本
          CURRENT_VERSION=$(grep -E 'version "[0-9.]+"' Casks/catalyst-browse.rb | sed -E 's/.*version "(.*)"/\1/')
          echo "Current version: $CURRENT_VERSION"
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          
          # 从 Sony 支持页面获取最新版本信息
          echo "Checking Sony support page for latest version..."
          SUPPORT_PAGE=$(curl -s "https://www.sony.com/electronics/support/articles/CCCT03000")
          
          # 提取 Catalyst Browse 版本号
          LATEST_VERSION=$(echo "$SUPPORT_PAGE" | grep -oE 'Catalyst Browse [0-9]+\.[0-9]+' | head -1 | sed 's/Catalyst Browse //')
          
          echo "Latest version from Sony support page: $LATEST_VERSION"
          
          if [ -z "$LATEST_VERSION" ]; then
            echo "Could not determine latest version from support page"
            echo "update_needed=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          if [ "$CURRENT_VERSION" != "$LATEST_VERSION" ]; then
            echo "New version available: $LATEST_VERSION"
            echo "new_version=$LATEST_VERSION" >> $GITHUB_OUTPUT
            echo "update_needed=true" >> $GITHUB_OUTPUT
          else
            echo "Already up to date"
            echo "update_needed=false" >> $GITHUB_OUTPUT
          fi

      - name: Update cask file
        if: steps.check.outputs.update_needed == 'true'
        run: |
          NEW_VERSION=${{ steps.check.outputs.new_version }}
          
          # Sony Catalyst Browse 的下载链接通过重定向获取
          echo "Getting download URL through redirect..."
          NEW_URL=$(curl -s -I "https://support.d-imaging.sony.co.jp/disoft_DL/CatalystBrowse_DL/mac?fm=en" | grep -i location | cut -d' ' -f2 | tr -d '\r')
          
          if [ -z "$NEW_URL" ]; then
            echo "Could not get download URL"
            exit 1
          fi
          
          echo "Download URL: $NEW_URL"
          
          # 下载新版本文件以计算 SHA256
          if curl -f -L -o catalyst_browse_new.dmg "$NEW_URL"; then
            NEW_SHA256=$(sha256sum catalyst_browse_new.dmg | cut -d' ' -f1)
            echo "New SHA256: $NEW_SHA256"
            
            # 更新 cask 文件
            sed -i "s/version \".*\"/version \"$NEW_VERSION\"/" Casks/catalyst-browse.rb
            sed -i "s/sha256 \".*\"/sha256 \"$NEW_SHA256\"/" Casks/catalyst-browse.rb
            
            # 如果 URL 发生变化，也需要更新
            CURRENT_URL=$(grep -E 'url ".*"' Casks/catalyst-browse.rb | sed -E 's/.*url "(.*)".*/\1/' | cut -d',' -f1)
            if [ "$CURRENT_URL" != "$NEW_URL" ]; then
              echo "URL changed from $CURRENT_URL to $NEW_URL"
              sed -i "s|url \".*\"|url \"$NEW_URL\"|" Casks/catalyst-browse.rb
            fi
            
            rm catalyst_browse_new.dmg
          else
            echo "Could not download the new version from: $NEW_URL"
            exit 1
          fi

          # 更新 README.md 中的版本号
          sed -i "s/| 🎬 Sony Catalyst Browse | \`catalyst-browse\` | [^|]* |/| 🎬 Sony Catalyst Browse | \`catalyst-browse\` | $NEW_VERSION |/" README.md

      - name: Test updated cask
        if: steps.check.outputs.update_needed == 'true'
        run: |
          # 安装 Homebrew 用于测试
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

          # 测试 cask 语法
          brew audit --cask Casks/catalyst-browse.rb || true

      - name: Commit and push changes
        if: steps.check.outputs.update_needed == 'true'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          git add Casks/catalyst-browse.rb README.md
          git commit -m "chore: update Sony Catalyst Browse to version ${{ steps.check.outputs.new_version }}

          - Updated version from ${{ steps.check.outputs.current_version }} to ${{ steps.check.outputs.new_version }}
          - Updated SHA256 checksum (if available)
          - Updated README.md version table
          - Source: https://www.sony.com/electronics/support/articles/CCCT03000"
          
          git push
