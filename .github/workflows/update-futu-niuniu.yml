name: Update Futu Niuniu Cask

'on':
  schedule:
    - cron: "54 23 * * *"  # 北京时间 07:54
  workflow_dispatch: {}

permissions:
  contents: write

concurrency:
  group: update-futu-niuniu
  cancel-in-progress: true

jobs:
  update:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check new version
        id: check
        shell: bash
        run: |
          set -euo pipefail
          CURRENT_VERSION=$(sed -n 's/^\s*version \"\(.*\)\"/\1/p' Casks/futu-niuniu.rb)

          # 解析下载页中的直链文件名获取版本
          page=$(curl -fsSL 'https://www.futunn.com/download/mac') || page=""
          if [[ -z "$page" ]]; then
            page=$(curl -fsSL 'https://www.futunn.com/download') || true
          fi

          NEW_VERSION=$(printf "%s" "$page" | grep -Eo 'FTNN_desktop_[0-9]+(\.[0-9]+)+_Website\.dmg' | head -n1 | sed -E 's/.*FTNN_desktop_([0-9.]+)_Website\.dmg/\1/')

          if [[ -z "${NEW_VERSION:-}" ]]; then
            echo "未能解析 Futu 版本，跳过。"
            echo "update_needed=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          if [[ "$NEW_VERSION" == "$CURRENT_VERSION" ]]; then
            echo "已是最新版本：$CURRENT_VERSION"
            echo "update_needed=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          URL="https://softwaredownload.futunn.com/FTNN_desktop_${NEW_VERSION}_Website.dmg"
          curl -fSL "$URL" -o /tmp/futu-niuniu.dmg
          SHA=$(shasum -a 256 /tmp/futu-niuniu.dmg | awk '{print $1}')

          echo "new_version=$NEW_VERSION" >> "$GITHUB_OUTPUT"
          echo "new_sha256=$SHA" >> "$GITHUB_OUTPUT"
          echo "update_needed=true" >> "$GITHUB_OUTPUT"

      - name: Apply updates
        if: steps.check.outputs.update_needed == 'true'
        env:
          NEW_VERSION: ${{ steps.check.outputs.new_version }}
          NEW_SHA256: ${{ steps.check.outputs.new_sha256 }}
        shell: bash
        run: |
          set -euo pipefail
          OLD_VERSION=$(sed -n 's/^\s*version \"\(.*\)\"/\1/p' Casks/futu-niuniu.rb)

          sed -i '' "s/^\s*version \".*\"/  version \"$NEW_VERSION\"/" Casks/futu-niuniu.rb
          sed -i '' "s/^\s*sha256 \".*\"/  sha256 \"$NEW_SHA256\"/" Casks/futu-niuniu.rb

          sed -i '' "s/| \`futu-niuniu\` | [^|]* |/| \`futu-niuniu\` | $NEW_VERSION |/" README.md

          echo "OLD_VERSION=$OLD_VERSION" >> $GITHUB_ENV

      - name: Validate
        if: steps.check.outputs.update_needed == 'true'
        shell: bash
        run: |
          ruby -c Casks/futu-niuniu.rb
          grep "\`futu-niuniu\`" README.md | cat

      - name: Commit and push
        if: steps.check.outputs.update_needed == 'true'
        env:
          NEW_VERSION: ${{ steps.check.outputs.new_version }}
        shell: bash
        run: |
          set -euo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add Casks/futu-niuniu.rb README.md
          git commit -m "chore: update Futu Niuniu to version ${NEW_VERSION}

- Updated version from ${OLD_VERSION} to ${NEW_VERSION}
- Updated SHA256 checksum
- Updated README.md version table
- Source: https://www.futunn.com/download/mac" || exit 0
          git push

name: Update Futu Niuniu Cask

on:
  schedule:
    # 每天北京时间上午 7 点检查更新（UTC 时间 23 点，即前一天 23:00）
    - cron: '0 23 * * *'
  workflow_dispatch: # 允许手动触发
  push:
    branches:
      - main
    paths:
      - '.github/workflows/update-futu-niuniu.yml'

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check for new version
        id: check
        run: |
          # 获取当前 cask 中的版本
          CURRENT_VERSION=$(grep -E 'version "[0-9.]+"' Casks/futu-niuniu.rb | sed -E 's/.*version "(.*)"/\1/')
          echo "Current version: $CURRENT_VERSION"
          
          # 从官网获取最新版本信息
          # 注意：这里需要解析官网的实际版本号，可能需要根据实际情况调整
          DOWNLOAD_PAGE=$(curl -s https://www.futunn.com/download/mac)
          
          # 尝试从页面中提取版本号（根据实际页面结构可能需要调整）
          LATEST_VERSION=$(echo "$DOWNLOAD_PAGE" | grep -oE 'Ver\.[0-9]+\.[0-9]+\.[0-9]+' | head -1 | sed 's/Ver\.//')
          
          # 如果没找到，尝试从下载链接中提取
          if [ -z "$LATEST_VERSION" ]; then
            LATEST_VERSION=$(echo "$DOWNLOAD_PAGE" | grep -oE 'FTNN_desktop_[0-9]+\.[0-9]+\.[0-9]+' | head -1 | sed 's/FTNN_desktop_//')
          fi
          
          echo "Latest version: $LATEST_VERSION"
          
          if [ -z "$LATEST_VERSION" ]; then
            echo "Could not determine latest version"
            exit 0
          fi
          
          if [ "$CURRENT_VERSION" != "$LATEST_VERSION" ]; then
            echo "New version available: $LATEST_VERSION"
            echo "new_version=$LATEST_VERSION" >> $GITHUB_OUTPUT
            echo "update_needed=true" >> $GITHUB_OUTPUT
          else
            echo "Already up to date"
            echo "update_needed=false" >> $GITHUB_OUTPUT
          fi

      - name: Update cask file
        if: steps.check.outputs.update_needed == 'true'
        run: |
          NEW_VERSION=${{ steps.check.outputs.new_version }}
          
          # 下载新版本文件以计算 SHA256
          NEW_URL="https://softwaredownload.futunn.com/FTNN_desktop_${NEW_VERSION}_Website.dmg"
          echo "Downloading from: $NEW_URL"
          
          curl -L -o futu_new.dmg "$NEW_URL"
          NEW_SHA256=$(sha256sum futu_new.dmg | cut -d' ' -f1)
          
          echo "New SHA256: $NEW_SHA256"
          
          # 更新 cask 文件
          sed -i "s/version \".*\"/version \"$NEW_VERSION\"/" Casks/futu-niuniu.rb
          sed -i "s/sha256 \".*\"/sha256 \"$NEW_SHA256\"/" Casks/futu-niuniu.rb

          # 更新 README.md 中的版本号
          sed -i "s/| 📈 富途牛牛 | \`futu-niuniu\` | [^|]* |/| 📈 富途牛牛 | \`futu-niuniu\` | $NEW_VERSION |/" README.md

          # 清理下载的文件
          rm futu_new.dmg

      - name: Commit and push changes
        if: steps.check.outputs.update_needed == 'true'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          git add Casks/futu-niuniu.rb README.md
          git commit -m "chore: update Futu Niuniu to version ${{ steps.check.outputs.new_version }}

          - Updated version from previous to ${{ steps.check.outputs.new_version }}
          - Updated SHA256 checksum
          - Updated README.md version table
          - Source: https://www.futunn.com/"
          git push
